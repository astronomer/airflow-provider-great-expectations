name: Build and test

on:
  push: # Run on pushes to the default branch
    branches: [main]
  pull_request: # Also run on pull requests originated from forks
    branches: [main]
  release:
    types: [ 'created' ]

# This allows a subsequently queued workflow run to interrupt and cancel previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  Authorize:
    environment: ${{ github.event_name == 'pull_request' &&
      github.event.pull_request.head.repo.full_name != github.repository &&
      'external' || 'internal' }}
    runs-on: ubuntu-latest
    steps:
      - run: true

  Deploy-Pages:
    needs: Authorize
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: "x64"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.13"

      - name: Install packages and dependencies
        run: uv tool install hatch

      - name: Deploy Docs
        run: |
          git config user.name "oss-integrations-bot"
          git config user.email "oss-integrations-bot@astronomer.io"

          git fetch origin gh-pages --depth=1

          if [[ $GITHUB_EVENT_NAME == "release" ]]; then
              hatch run docs:gh-release
          else
              hatch run docs:gh-deploy
          fi

  build-n-publish:
    needs: Authorize
    if: github.event_name == 'release'
    name: Build and publish Python üêç distributions üì¶ to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/airflow-provider-great-expectations/
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        architecture: "x64"
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.7.13"
    - name: Verify Git Tag and package version
      run: python3 .github/scripts/verify_tag_and_version.py
    - run: uv build --wheel --sdist
    - run: uv publish
